# .github/workflows/ci.yml

# Nombre del pipeline que se mostrará en la pestaña "Actions" de GitHub
name: CI Pipeline

# Define los disparadores (triggers) que activarán el pipeline
on:
  # Se ejecuta cada vez que se hace un push a la rama 'main'
  push:
    branches: [ "main" ]
  # Se ejecuta cada vez que se crea o actualiza un Pull Request dirigido a 'main'
  pull_request:
    branches: [ "main" ]

# Agrupa los "trabajos" (jobs) que se ejecutarán.
# Podemos tener jobs para el backend, frontend, etc.
jobs:
  # Definimos un job llamado 'test-backend'
  test-backend:
    # Especifica el sistema operativo del entorno virtual donde se ejecutará el job
    runs-on: ubuntu-latest

    # Define los pasos (steps) que se ejecutarán secuencialmente en este job
    steps:
      # 1. Descarga el código de tu repositorio al entorno virtual
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configura el entorno de Node.js, especificando la versión
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # 3. Instala las dependencias del backend.
      # 'npm ci' es recomendado para CI porque es más rápido y estricto que 'npm install'.
      - name: Install backend dependencies
        run: cd backend && npm ci

      # 4. Ejecuta las pruebas unitarias del backend
      # El script 'npm run test' ejecutará Jest, que correrá el archivo .spec.ts
      - name: Run backend unit tests
        run: cd backend && npm run test

version: '3.8'

services:
  # 1. Reverse Proxy que recibe todo el tráfico
  nginx:
    image: nginx:latest
    container_name: codenotes_nginx
    ports:
      - "80:80"      # Puerto HTTP para redirección a HTTPS
      - "443:443"    # Puerto HTTPS principal
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      # Montar certificados SSL (obtenidos con Certbot, por ejemplo)
      - /etc/letsencrypt:/etc/letsencrypt 
    depends_on:
      - backend
      - frontend
    networks:
      - codenotes-network

  # 2. Backend API con NestJS
  backend:
    build:
      context: ./backend
    container_name: codenotes_backend
    restart: unless-stopped
    env_file: .env # Carga las variables de entorno desde el archivo .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - db
    networks:
      - codenotes-network

  # 3. Frontend con React
  frontend:
    build:
      context: ./frontend
    container_name: codenotes_frontend
    restart: unless-stopped
    networks:
      - codenotes-network

  # 4. Base de Datos PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: codenotes_db
    restart: unless-stopped
    env_file: .env # Carga las variables para el usuario/pass de la BD
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - codenotes-network

# Red privada para que los contenedores se comuniquen
networks:
  codenotes-network:
    driver: bridge

# Volumen para persistir los datos de la BD
volumes:
  postgres-data:
